#title: 运行 JUnit 测试 - Maven
#author: ywjno(ywjno.dev@gmail.com)
#index:0
--------------------------------------------------------------------------------------------------------------------------------------
搭建 Maven 编译环境

	从很久以前的某个版本开始（大约是1.b.35版），Nutz 就偷偷的加入了 maven 的 pom.xml 文件，
	极好的解决了测试时需要依赖其他 jar 包的问题，接下来就让我们使用 Maven 来进行 JUnit 测试吧。

	 * Nutz 在 Github 的 地址为 https://github.com/nutzam/nutz
		 * 获取一份包括历史记录的代码，请运行这个命令：git clone git://github.com/nutzam/nutz.git
		 * 如果你只想阅读最新的代码，请运行这个命令：git clone git://github.com/nutzam/nutz.git --depth=1 --branch=master

	你可以参看 [git_project.man 从 Git编译源码]，这是我们推荐的项目构建和编译方式。

--------------------------------------------------------------------------------------------------------------------------------------
如何运行 基于 Maven 的 JUnit 测试

	那么如何运行 JUnit 测试呢？

	1. 下载与配置 Maven
		抱歉，本文不打算加入有关配置 Maven 的内容，请自行 google 解决。
		比如[http://www.cnblogs.com/fnng/archive/2011/12/02/2272610.html 这篇]文章就挺不错。
		当在命令行中输入「mvn -v」后给你返回一些 Maven 的信息的话，表示你已经配置成功了。

	2. 创建测试数据库

		在 Maven 的测试环境中，我们使用的是 PostgreSQL 这个数据库，所以首先你需要先安装该数据库。
		之后在里面建立一个测试数据库，比如，我们叫 nutztest。建议不要使用 test 这个名字。
		{{{
		$ psql -c 'create database nutztest;' -U postgres -h localhost -p 5432
		}}}

	3. 创建连接配置文件与 log 配置文件
		具体内容请参照[compile.man 运行 JUnit 测试 - Eclipse]这里面的「如何运行 JUnit 测试」一节中的第2、第3步，
		这里不再重复。

		友情提示
			* 可以把「tools/travis-ci」目录下的连接配置文件与 log 配置文件拿来修改后使用。
			* 可以把这两个配置文件给放到「test」目录下，并且这两文件不会被加入到代码管理中。

	4. 运行 JUnit 测试
		没啥说的了，直接在命令行中cd到项目路径后直接输入「mvn test」即可。
		之前没用过 Maven 的话，它会先去下载一些依赖包，这跟网速有关，请耐心等待。
		如果在下载依赖包的时候有 failed 情况出现的话，那是因为某些网络原因造成的，你知道的。

	打完收工。

--------------------------------------------------------------------------------------------------------------------------------------
最后 ...

	 * Eclipse支持直接导入maven项目
